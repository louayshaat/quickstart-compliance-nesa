---
## Example AWS WAF rule set covering generic OWASP Top 10 vulnerability
## areas with PHP backend specific misconfigurations.
##
##
## Repository:
## https://github.com/awslabs/aws-waf-sample
##
## Dependencies:
## none

AWSTemplateFormatVersion: '2010-09-09'
Description: AWS WAF Basic OWASP Example Rule Set (qs-1qtdd1c9d)

## ::PARAMETERS::
## Template parameters to be configured by user
Parameters:
  stackPrefix:
    Type: String
    Description: The prefix to use when naming resources in this stack. Normally we would use the stack name, but since this template can be used as a resource in other stacks we want to keep the naming consistent. No symbols allowed.
    ConstraintDescription: Alphanumeric characters only, maximum 10 characters
    AllowedPattern: ^[a-zA-z0-9]+$
    MaxLength: 10
    Default: standard
  ruleAction:
    Type: String
    Description: The type of action you want to iplement for the rules in this set. Valid options are COUNT or BLOCK.
    AllowedValues:
      - BLOCK
      - COUNT
    Default: BLOCK
  includesPrefix:
    Type: String
    Description: This is the URI path prefix (starting with '/') that identifies any files in your webroot that are server-side included components, and should not be invoked directly via URL. These can be headers, footers, 3rd party server side libraries or components. You can add additional prefixes later directly in the set.
    Default: /includes
  adminUrlPrefix:
    Type: String
    Description: This is the URI path prefix (starting with '/') that identifies your administrative sub-site. You can add additional prefixes later directly in the set.
    Default: /admin
  adminRemoteCidr:
    Type: String
    Description: This is the IP address allowed to access your administrative interface. Use CIDR notation. You can add additional ones later directly in the set.
    Default: 127.0.0.1/32
  maxExpectedURISize:
    Type: Number
    Description: Maximum number of bytes allowed in the URI component of the HTTP request. Generally the maximum possible value is determined by the server operating system (maps to file system paths), the web server software, or other middleware components. Choose a value that accomodates the largest URI segment you use in practice in your web application.
    Default: 512
  maxExpectedQueryStringSize:
    Type: Number
    Description: Maximum number of bytes allowed in the query string component of the HTTP request. Normally the  of query string parameters following the "?" in a URL is much larger than the URI , but still bounded by the  of the parameters your web application uses and their values.
    Default: 1024
  maxExpectedBodySize:
    Type: Number
    Description: Maximum number of bytes allowed in the body of the request. If you do not plan to allow large uploads, set it to the largest payload value that makes sense for your web application. Accepting unnecessarily large values can cause performance issues, if large payloads are used as an attack vector against your web application.
    Default: 4096
  maxExpectedCookieSize:
    Type: Number
    Description: Maximum number of bytes allowed in the cookie header. The maximum size should be less than 4096, the size is determined by the amount of information your web application stores in cookies. If you only pass a session token via cookies, set the size to no larger than the serialized size of the session token and cookie metadata.
    Default: 4093
  csrfExpectedHeader:
    Type: String
    Description: The custom HTTP request header, where the CSRF token value is expected to be encountered
    Default: x-csrf-token
  csrfExpectedSize:
    Type: Number
    Description: The size in bytes of the CSRF token value. For example if it's a canonically formatted UUIDv4 value the expected size would be 36 bytes/ASCII characters
    Default: 36
  pELBWeb:
    Description: Web ELB ARN for WAF
    Type: String
    Default: ''
  pWAFLogging:
    Type: String
    Default: ''
  pESClusterARN:
    Type: String
    Default: ''
  pCentralLogBucket:
    Type: String
    Default: ''

## ::METADATA::
## CloudFormation parameter UI definitions
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Resource Prefix
        Parameters:
          - stackPrefix
      - Label:
          default: WAF Implementation
        Parameters:
          - ruleAction
          - pWAFLogging
          - pELBWeb
      - Label:
          default: Generic HTTP Request Enforcement
        Parameters:
          - maxExpectedURISize
          - maxExpectedQueryStringSize
          - maxExpectedBodySize
          - maxExpectedCookieSize
      - Label:
          default: Administrative Interface
        Parameters:
          - adminUrlPrefix
          - adminRemoteCidr
      - Label:
          default: Cross-Site Request Forgery (CSRF)
        Parameters:
          - csrfExpectedHeader
          - csrfExpectedSize
      - Label:
          default: Application Specific
        Parameters:
          - includesPrefix
      - Label:
          default: Logging configuration
        Parameters:
          - pCentralLogBucket
          - pWAFLogging
      - Label:
          default: ElasticSearch Configuration
        Parameters:
          - pESClusterARN
    ParameterLabels:
      stackPrefix:
        default: Resource Name Prefix
      ruleAction:
        default: Rule Effect
      includesPrefix:
        default: Server-side components URI prefix
      adminUrlPrefix:
        default: URI prefix
      adminRemoteCidr:
        default: Allowed IP source (CIDR)
      maxExpectedURISize:
        default: Max. size of URI
      maxExpectedQueryStringSize:
        default: Max. size of QUERY STRING
      maxExpectedBodySize:
        default: Max. size of BODY
      maxExpectedCookieSize:
        default: Max. size of COOKIE
      csrfExpectedHeader:
        default: HTTP Request Header
      csrfExpectedSize:
        default: Token Size
      pELBWeb:
        default: WAF ELB ARN
      pWAFLogging:
        default: WAF Logging
      pCentralLogBucket:
        default: Central Logging Bucket
      pESClusterARN:
        default: ElasticSearch Cluster ARN

## ::CONDITIONS::
## Determines if we're streaming to ES or S3
Conditions:
  isElastic: !Equals [ !Ref pWAFLogging, Amazon Elasticsearch_S3 ]
  isCentralOnly: !Equals [ !Ref pWAFLogging, Amazon S3 Only ]
  CentralLoggingCondition: !Not [!Equals [!Ref pCentralLogBucket, '']]
  isElasticAndCentral:
    Fn::And:
      - {"Condition":"isElastic"}
      - {"Condition":"CentralLoggingCondition"}


## ::RESOURCES::
## Resources used in this solution

Resources:
  CloudWatchLogGroupES:
    Type: AWS::Logs::LogGroup
    Condition: isElastic
    Properties:
      RetentionInDays: 365

  CloudWatchLogStreamES:
    DependsOn: CloudWatchLogGroupES
    Type: AWS::Logs::LogStream
    Condition: isElastic
    Properties:
      LogGroupName: !Ref CloudWatchLogGroupES
      LogStreamName: !Sub AWS_WAF_ES_${AWS::Region}

  CloudWatchLogGroupS3:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 365

  CloudWatchLogStreamS3:
    DependsOn: CloudWatchLogGroupS3
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref CloudWatchLogGroupS3
      LogStreamName: !Sub AWS_WAF_S3_${AWS::Region}

  FirehoseStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Condition: isElasticAndCentral
    Properties:
      DeliveryStreamName: aws-waf-logs-analytics
      DeliveryStreamType: DirectPut
      ElasticsearchDestinationConfiguration:
          BufferingHints:
            IntervalInSeconds: 60
            SizeInMBs: 1
          CloudWatchLoggingOptions:
            Enabled: true
            LogGroupName: !Ref CloudWatchLogGroupES
            LogStreamName: !Ref CloudWatchLogStreamES
          DomainARN: !Ref pESClusterARN
          IndexName: awswaf-
          IndexRotationPeriod: NoRotation
          RetryOptions:
            DurationInSeconds: 300
          RoleARN: !GetAtt rFirehoseRoleES.Arn
          S3BackupMode: AllDocuments
          S3Configuration:
            BucketARN: !Sub arn:aws:s3:::${pCentralLogBucket}
            BufferingHints:
              IntervalInSeconds: 60
              SizeInMBs: 1
            CloudWatchLoggingOptions:
              Enabled: true
              LogGroupName: !Ref CloudWatchLogGroupS3
              LogStreamName: !Ref CloudWatchLogStreamS3
            CompressionFormat: UNCOMPRESSED
            ErrorOutputPrefix: WAF_error
            Prefix: !Sub AWS_WAF_S3_${AWS::Region}
            RoleARN: !GetAtt rFirehoseRoleES.Arn
          TypeName: JSON

  StreamS3only:
    Type: AWS::KinesisFirehose::DeliveryStream
    Condition: CentralLoggingCondition
    Properties:
      DeliveryStreamName: aws-waf-logs-analytics
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !Sub arn:aws:s3:::${pCentralLogBucket}
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 120
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref CloudWatchLogGroupS3
          LogStreamName: !Ref CloudWatchLogStreamS3
        CompressionFormat: UNCOMPRESSED
        ErrorOutputPrefix: WAF_error
        Prefix: !Sub AWS_WAF_S3_${AWS::Region}
        RoleARN: !GetAtt rFirehoseRoleS3.Arn

  rFirehoseRoleS3:
    Type: AWS::IAM::Role
    Condition: CentralLoggingCondition
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: 'Allow'
          Principal:
            Service: 'firehose.amazonaws.com'
          Action: 'sts:AssumeRole'
          Condition:
            StringEquals:
              sts:ExternalId: !Sub ${AWS::AccountId}
      Path: /
      Policies:
        - PolicyName: Firehose_Role_S3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: glue:GetTableVersions
                Resource: "*"
            #Statement:
              - Effect: Allow
                Action:
                - s3:AbortMultipartUpload
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
                - s3:PutObject
                Resource:
                - !Sub arn:aws:s3:::${pCentralLogBucket}
                - !Sub arn:aws:s3:::${pCentralLogBucket}/*
            #Statement:
              - Effect: Allow
                Action:
                - lambda:InvokeFunction
                - lambda:GetFunctionConfiguration
                Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%
            #Statement:
              - Effect: Allow
                Action: logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/aws-waf-logs-${AWS::Region}-analytics:log-stream:*

  rFirehoseRoleES:
    Type: AWS::IAM::Role
    Condition: isElasticAndCentral
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - firehose.amazonaws.com
          Action:
          - sts:AssumeRole
          Condition:
            StringEquals:
              sts:ExternalId: !Sub ${AWS::AccountId}
      Path: /
      Policies:
        - PolicyName: Firehose_Role_ES
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowS3
                Effect: Allow
                Action:
                - s3:AbortMultipartUpload
                - s3:GetBucketLocation
                - s3:GetObject
                - s3:ListBucket
                - s3:ListBucketMultipartUploads
                - s3:PutObject
                Resource:
                - !Sub arn:aws:s3:::${pCentralLogBucket}
                - !Sub arn:aws:s3:::${pCentralLogBucket}/*
          #  Statement:
              - Effect: Allow
                Action:
                - lambda:InvokeFunction
                - lambda:GetFunctionConfiguration
                Resource: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%
          #  Statement:
              - Effect: Allow
                Action:
                - es:DescribeElasticsearchDomain
                - es:DescribeElasticsearchDomains
                - es:DescribeElasticsearchDomainConfig
                - es:ESHttpPost
                - es:ESHttpPut
                Resource:
                - !Ref pESClusterARN
                - !Join [ '', [ !Ref pESClusterARN, '/*' ]]
              - Effect: Allow
                Action: es:ESHttpGet
                Resource:
                - !Join [ '', [ !Ref pESClusterARN, '/_all/_settings' ]]
                - !Join [ '', [ !Ref pESClusterARN, '/_cluster/stats' ]]
                - !Join [ '', [ !Ref pESClusterARN, '/awswaf-*/_mapping/json' ]]
                - !Join [ '', [ !Ref pESClusterARN, '/_nodes' ]]
                - !Join [ '', [ !Ref pESClusterARN, '/_nodes/stats' ]]
                - !Join [ '', [ !Ref pESClusterARN, '/_nodes/*/stats' ]]
                - !Join [ '', [ !Ref pESClusterARN, '/_stats' ]]
                - !Join [ '', [ !Ref pESClusterARN, '/awswaf-*/_stats' ]]
          #  Statement:
              - Effect: Allow
                Action:
                - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/aws-waf-logs-${AWS::Region}-analytics:log-stream*



## 1.
## OWASP Top 10 A1
## Mitigate SQL Injection Attacks
## Matches attempted SQLi patterns in the URI, QUERY_STRING, BODY, COOKIES
  wafrSQLiSet:
    Type: AWS::WAFRegional::SqlInjectionMatchSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'detect-sqli']]
      SqlInjectionMatchTuples:
        - FieldToMatch:
            Type: URI
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: HTML_ENTITY_DECODE

  wafrSQLiRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'mitigatesqli']]
      Name: !Join ['-', [!Ref stackPrefix, 'mitigate-sqli']]
      Predicates:
        - Type: SqlInjectionMatch
          Negated: false
          DataId: !Ref wafrSQLiSet

## 2.
## OWASP Top 10 A2
## Blacklist bad/hijacked JWT tokens or session IDs
## Matches the specific values in the cookie or Authorization header
## for JWT it is sufficient to check the signature
  wafrAuthTokenStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-auth-tokens']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          PositionalConstraint: CONTAINS
          TargetString: example-session-id
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: authorization
          PositionalConstraint: ENDS_WITH
          TargetString: .TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
          TextTransformation: URL_DECODE

  wafrAuthTokenRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'badauthtokens']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-bad-auth-tokens']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrAuthTokenStringSet

## 3.
## OWASP Top 10 A3
## Mitigate Cross Site Scripting Attacks
## Matches attempted XSS patterns in the URI, QUERY_STRING, BODY, COOKIES
  wafrXSSSet:
    Type: AWS::WAFRegional::XssMatchSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'detect-xss']]
      XssMatchTuples:
        - FieldToMatch:
            Type: URI
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: BODY
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: HTML_ENTITY_DECODE

  wafrXSSRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'mitigatexss']]
      Name: !Join ['-', [!Ref stackPrefix, 'mitigate-xss']]
      Predicates:
        - Type: XssMatch
          Negated: false
          DataId: !Ref wafrXSSSet

## 4.
## OWASP Top 10 A4
## Path Traversal, LFI, RFI
## Matches request patterns designed to traverse filesystem paths, and include
## local or remote files
  wafrPathsStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-rfi-lfi-traversal']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ../
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: HTML_ENTITY_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: ://
          TextTransformation: HTML_ENTITY_DECODE

  wafrPathsRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectrfilfi']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-rfi-lfi-traversal']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrPathsStringSet

## 5.
## OWASP Top 10 A4
## Privileged Module Access Restrictions
## Restrict access to the admin interface to known source IPs only
## Matches the URI prefix, when the remote IP isn't in the whitelist
  wafrAdminUrlStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-admin-url']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: STARTS_WITH
          TargetString: !Ref adminUrlPrefix
          TextTransformation: URL_DECODE

  wafrAdminRemoteAddrIpSet:
    Type: AWS::WAFRegional::IPSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-admin-remote-ip']]
      IPSetDescriptors:
        - Type: IPV4
          Value: !Ref adminRemoteCidr

  wafrAdminAccessRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectadminaccess']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-admin-access']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrAdminUrlStringSet
        - Type: IPMatch
          Negated: true
          DataId: !Ref wafrAdminRemoteAddrIpSet

## 6.
## OWASP Top 10 A5
## PHP Specific Security Misconfigurations
## Matches request patterns designed to exploit insecure PHP/CGI configuration
  wafrPHPInsecureQSStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-php-insecure-var-refs']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: _SERVER[
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: _ENV[
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: auto_prepend_file=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: auto_append_file=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: allow_url_include=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: disable_functions=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: open_basedir=
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: QUERY_STRING
          PositionalConstraint: CONTAINS
          TargetString: safe_mode=
          TextTransformation: URL_DECODE

  wafrPHPInsecureURIStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-php-insecure-uri']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: php
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: /
          TextTransformation: URL_DECODE

  wafrPHPInsecureRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectphpinsecure']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-php-insecure']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrPHPInsecureQSStringSet
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrPHPInsecureURIStringSet

## 7.
## OWASP Top 10 A7
## Mitigate abnormal requests via size restrictions
## Enforce consistent request hygene, limit size of key elements
  wafrSizeRestrictionSet:
    Type: AWS::WAFRegional::SizeConstraintSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'size-restrictions']]
      SizeConstraints:
        - FieldToMatch:
            Type: URI
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedURISize
        - FieldToMatch:
            Type: QUERY_STRING
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedQueryStringSize
        - FieldToMatch:
            Type: BODY
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedBodySize
        - FieldToMatch:
            Type: HEADER
            Data: cookie
          TextTransformation: NONE
          ComparisonOperator: GT
          Size: !Ref maxExpectedCookieSize

  wafrSizeRestrictionRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'restrictsizes']]
      Name: !Join ['-', [!Ref stackPrefix, 'restrict-sizes']]
      Predicates:
        - Type: SizeConstraint
          Negated: false
          DataId: !Ref wafrSizeRestrictionSet

## 8.
## OWASP Top 10 A8
## CSRF token enforcement example
## Enforce the presence of CSRF token in request header
  wafrCSRFMethodStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-csrf-method']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: METHOD
          PositionalConstraint: EXACTLY
          TargetString: post
          TextTransformation: LOWERCASE

  wafrCSRFTokenSizeConstraint:
    Type: AWS::WAFRegional::SizeConstraintSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-csrf-token']]
      SizeConstraints:
        - FieldToMatch:
            Type: HEADER
            Data: !Ref csrfExpectedHeader
          TextTransformation: NONE
          ComparisonOperator: EQ
          Size: !Ref csrfExpectedSize

  wafrCSRFRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'enforcecsrf']]
      Name: !Join ['-', [!Ref stackPrefix, 'enforce-csrf']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrCSRFMethodStringSet
        - Type: SizeConstraint
          Negated: true
          DataId: !Ref wafrCSRFTokenSizeConstraint
## 9.
## OWASP Top 10 A9
## Server-side includes & libraries in webroot
## Matches request patterns for webroot objects that shouldn't be directly accessible
  wafrServerSideIncludeStringSet:
    Type: AWS::WAFRegional::ByteMatchSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-ssi']]
      ByteMatchTuples:
        - FieldToMatch:
            Type: URI
          PositionalConstraint: STARTS_WITH
          TargetString: !Ref includesPrefix
          TextTransformation: URL_DECODE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .cfg
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .conf
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .config
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .ini
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .log
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .bak
          TextTransformation: LOWERCASE
        - FieldToMatch:
            Type: URI
          PositionalConstraint: ENDS_WITH
          TargetString: .backup
          TextTransformation: LOWERCASE

  wafrServerSideIncludeRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'detectssi']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-ssi']]
      Predicates:
        - Type: ByteMatch
          Negated: false
          DataId: !Ref wafrServerSideIncludeStringSet

## 10.
## Generic
## IP Blacklist
## Matches IP addresses that should not be allowed to access content
  wafrBlacklistIpSet:
    Type: AWS::WAFRegional::IPSet
    Properties:
      Name: !Join ['-', [!Ref stackPrefix, 'match-blacklisted-ips']]
      IPSetDescriptors:
        - Type: IPV4
          Value: 10.0.0.0/8
        - Type: IPV4
          Value: 192.168.0.0/16
        - Type: IPV4
          Value: 169.254.0.0/16
        - Type: IPV4
          Value: 172.16.0.0/16
        - Type: IPV4
          Value: 127.0.0.1/32

  wafrBlacklistIpRule:
    Type: AWS::WAFRegional::Rule
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'blacklistedips']]
      Name: !Join ['-', [!Ref stackPrefix, 'detect-blacklisted-ips']]
      Predicates:
        - Type: IPMatch
          Negated: false
          DataId: !Ref wafrBlacklistIpSet

## --
## WebACL containing the above rules evaluated in-order
  wafrOwaspACL:
    Type: AWS::WAFRegional::WebACL
    Properties:
      MetricName: !Join ['', [!Ref stackPrefix, 'owaspacl']]
      Name: !Join ['-', [!Ref stackPrefix, 'owasp-acl']]
      DefaultAction:
        Type: ALLOW
      Rules:
        - Action:
            Type: !Ref ruleAction
          Priority: 10
          RuleId: !Ref wafrSizeRestrictionRule
        - Action:
            Type: !Ref ruleAction
          Priority: 20
          RuleId: !Ref wafrBlacklistIpRule
        - Action:
            Type: !Ref ruleAction
          Priority: 30
          RuleId: !Ref wafrAuthTokenRule
        - Action:
            Type: !Ref ruleAction
          Priority: 40
          RuleId: !Ref wafrSQLiRule
        - Action:
            Type: !Ref ruleAction
          Priority: 50
          RuleId: !Ref wafrXSSRule
        - Action:
            Type: !Ref ruleAction
          Priority: 60
          RuleId: !Ref wafrPathsRule
        - Action:
            Type: !Ref ruleAction
          Priority: 70
          RuleId: !Ref wafrPHPInsecureRule
        - Action:
            Type: !Ref ruleAction
          Priority: 80
          RuleId: !Ref wafrCSRFRule
        - Action:
            Type: !Ref ruleAction
          Priority: 90
          RuleId: !Ref wafrServerSideIncludeRule
        - Action:
            Type: !Ref ruleAction
          Priority: 100
          RuleId: !Ref wafrAdminAccessRule
  rWAFresource:
    Type: AWS::WAFRegional::WebACLAssociation
    Properties:
      ResourceArn: !Ref pELBWeb
      WebACLId: !Ref wafrOwaspACL



## ::OUTPUTS::
## Outputs useful in other templates
Outputs:
  wafWebACL:
    Value:  !Ref wafrOwaspACL
  wafWebACLMetric:
    Value: !Join ['', [!Ref stackPrefix, 'owaspacl']]
  wafSQLiRule:
    Value: !Ref wafrSQLiRule
  wafSQLiRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'mitigatesqli']]
  wafAuthTokenRule:
    Value: !Ref wafrAuthTokenRule
  wafAuthTokenRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'badauthtokens']]
  wafXSSRule:
    Value: !Ref wafrXSSRule
  wafXSSRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'mitigatexss']]
  wafPathsRule:
    Value: !Ref wafrPathsRule
  wafPathsRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'detectrfilfi']]
  wafPHPMisconfigRule:
    Value: !Ref wafrPHPInsecureRule
  wafPHPMisconfigRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'detectphpinsecure']]
  wafAdminAccessRule:
    Value: !Ref wafrAdminAccessRule
  wafAdminAccessRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'detectadminaccess']]
  wafCSRFRule:
    Value: !Ref wafrCSRFRule
  wafCSRFRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'enforcecsrf']]
  wafSSIRule:
    Value: !Ref wafrServerSideIncludeRule
  wafSSIRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'detectssi']]
  wafBlacklistIpRule:
    Value: !Ref wafrBlacklistIpRule
  wafBlacklistIpRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'blacklistedips']]
  wafSizeRestrictionRule:
    Value: !Ref wafrSizeRestrictionRule
  wafSizeRestrictionRuleMetric:
    Value: !Join ['', [!Ref stackPrefix, 'restrictsizes']]
  wafAuthTokenBlacklist:
    Value: !Ref wafrAuthTokenStringSet
  wafAdminAccessWhitelist:
    Value: !Ref wafrAdminRemoteAddrIpSet
  wafIpBlacklist:
    Value: !Ref wafrBlacklistIpSet
