---
AWSTemplateFormatVersion: 2010-09-09
Description: Provides RDS deployment ontop of main template (qs-1qtdd1c8m)
Metadata:
  Stack:
    Value: 3
  VersionDate:
    Value: 20190702
  Identifier:
    Value: template-Database-nesa
  Input:
    Description: VPC, SubnetIDs, CIDR blocks, KeyNames, AMIs, DB
      name and password
  Output:
    Description: Outputs ID of all deployed resources
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Availability Zone selection
      Parameters:
      - RegionAZ1Name
      - RegionAZ2Name
    - Label:
        default: Network configuration (existing VPC)
      Parameters:
      - ProductionCIDR
      - ProductionVPC
      - DBPrivateSubnetA
      - DBPrivateSubnetB
    - Label:
        default: Database configuration
      Parameters:
      - DBName
      - DBUser
      - DBPassword
      - CentralLogBucket
    - Label:
        default: AWS Quick Start configuration
      Parameters:
      - QSS3BucketName
      - QSS3BucketRegion
      - QSS3KeyPrefix
    ParameterLabels:
      RegionAZ1Name:
        default: First Availability Zone for Aurora
      RegionAZ2Name:
        default: Second Availability Zone for Aurora
      ProductionCIDR:
        default: CIDR for Aurora database
      ProductionVPC:
        default: VPC ID for Aurora database
      DBPrivateSubnetA:
        default: First private database subnet for Aurora
      DBPrivateSubnetB:
        default: Second private database subnet for Aurora
      DBName:
        default: Aurora database name
      DBUser:
        default: Aurora database user
      DBPassword:
        default: Aurora database password
      CentralLogBucket:
        default: Centralized logging bucket
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3BucketRegion:
        default: Quick Start S3 bucket region
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
Parameters:
  ProductionCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    Description: CIDR Range to allow input into the database.
    Type: String
    Default: 10.100.0.0/16
  ProductionVPC:
    Description: ID of the VPC where you will deploy the Aurora database cluster.
    Type: AWS::EC2::VPC::Id
  DBPrivateSubnetA:
    Description: The ID of the first private subnet in your Production VPC.
    Type: AWS::EC2::Subnet::Id
  DBPrivateSubnetB:
    Description: The ID of the second private subnet in your Production VPC.
    Type: AWS::EC2::Subnet::Id
  RegionAZ1Name:
    Description: The name of the first Availability Zone where you will deploy the Aurora database cluster.
    Type: AWS::EC2::AvailabilityZone::Name
  RegionAZ2Name:
    Description: The name of the second Availability Zone where you will deploy the Aurora database cluster.
    Type: AWS::EC2::AvailabilityZone::Name
  DBName:
    Description: Name of the Aurora database.
    MaxLength: "63"
    MinLength: "5"
    Type: String
  DBUser:
    Description: The user name for the database administrator of the Aurora database.
    Type: String
  DBPassword:
    Description: Password for the database instance.
    Type: String
    NoEcho: True
  CentralLogBucket:
    Type: String
    Description: The S3 bucket to send Aurora audit logs. This can be the bucket that you created when you launched the centralized logging template.
    Default: ''
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-.]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, periods (.), and hyphens (-). It cannot start or
      end with a hyphen (-). If you are unsure, do not change this value.
    Default: aws-quickstart
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-). If you are unsure, do not change this value.
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: The AWS Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When using your own bucket, you must specify this value.
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/). If you are unsure, do not change this value.
    Default: quickstart-compliance-nesa/
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/). If you are unsure, do not change this value.
    Type: String
Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  CentralLogBucketCondition: !Not [!Equals [!Ref CentralLogBucket, '']]
Resources:
  ProcRole:
    Condition: CentralLogBucketCondition
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: FHtransform
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
              - Effect: Allow
                Action:
                  - es:ESHttpPost
                Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/*
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:ListBucketMultipartUploads
                  - S3:PutObject
                Resource: !Sub arn:aws:s3:::${CentralLogBucket}
              - Effect: Allow
                Action:
                  - firehose:*
                Resource: !Sub arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/aws-rds-logs-analytics
  LambdaFirehoseProcessor:
    Condition: CentralLogBucketCondition
    Type: 'AWS::Lambda::Function'
    Properties:
      Description: Process RDS logs from CloudWatch
      Environment:
        Variables:
          # V56536055 - 10/08/2018 - better logging capabilities
          LOG_LEVEL: 'INFO' #change to WARN, ERROR or DEBUG as needed
      Handler: index.handler
      Runtime: nodejs10.x
      Timeout: 300
      Role: !GetAtt ProcRole.Arn
      FunctionName: LambdaFirehoseProcessor
      Code:
        S3Bucket: !GetAtt 'CopyZipsTemplate.Outputs.LambdaZipsBucket'
        S3Key: !Sub '${QSS3KeyPrefix}functions/packages/FHProcessor/lambda.zip'
  DBParamGroup:
    Type: "AWS::RDS::DBClusterParameterGroup"
    Properties:
      Description: "EnableAuditLog"
      Family: "aurora5.6"
      Parameters:
        server_audit_logging: 1
        server_audit_events: CONNECT, QUERY, TABLE
        server_audit_logs_upload: 1
  CloudWatchRole:
    Condition: CentralLogBucketCondition
    Type: AWS::IAM::Role
    DependsOn: StreamS3only
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: !Sub 'logs.${AWS::Region}.amazonaws.com'
            Action: 'sts:AssumeRole'
      RoleName: CWLtoKinesisRole
      Path: /
      Policies:
        - PolicyName: CloudWatchRoleFH
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowStream
                Effect: Allow
                Action: firehose:*
                Resource: !Sub "arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/aws-rds-logs-analytics"
              - Effect: Allow
                Action: kinesis:*
                Resource: !Sub "arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/aws-rds-logs-analytics"
              - Effect: Allow
                Action: logs:PutSubscriptionFilter
                Resource: '*'
              - Effect: Allow
                Action: iam:PassRole
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/CWLtoKinesisRole"
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:GetFunctionConfiguration
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:LambdaFirehoseProcessor"
  SubscriptionFilterAudit:
    Type: AWS::Logs::SubscriptionFilter
    Condition: CentralLogBucketCondition
    DependsOn:
      - StreamS3only
      - CloudWatchRole
    Properties:
      LogGroupName: !Ref CloudWatchLogGroupS3audit
      FilterPattern: ''
      DestinationArn: !Sub "arn:aws:firehose:${AWS::Region}:${AWS::AccountId}:deliverystream/aws-rds-logs-analytics"
      RoleArn: !Sub arn:aws:iam::${AWS::AccountId}:role/CWLtoKinesisRole
  CloudWatchLogGroupS3:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 365
  CloudWatchLogGroupS3audit:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 365
  CloudWatchLogStreamS3:
    DependsOn: CloudWatchLogGroupS3
    Type: AWS::Logs::LogStream
    Properties:
      LogGroupName: !Ref CloudWatchLogGroupS3
      LogStreamName: !Sub aws-rds-s3-logs-${AWS::Region}
  StreamS3only:
    Condition: CentralLogBucketCondition
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: aws-rds-logs-analytics
      DeliveryStreamType: DirectPut
      ExtendedS3DestinationConfiguration:
        BucketARN: !Sub arn:aws:s3:::${CentralLogBucket}
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 120
        CloudWatchLoggingOptions:
          Enabled: true
          LogGroupName: !Ref CloudWatchLogGroupS3
          LogStreamName: !Ref CloudWatchLogStreamS3
        CompressionFormat: UNCOMPRESSED
        ErrorOutputPrefix: rds_error
        Prefix: !Sub aws-${AWS::Region}-rds-logs
        RoleARN: !GetAtt FirehoseRoleS3.Arn
        ProcessingConfiguration:
          Enabled: true
          Processors:
            - Parameters:
                - ParameterName: LambdaArn
                  ParameterValue: !GetAtt LambdaFirehoseProcessor.Arn
              Type: Lambda
  FirehoseRoleS3:
    Condition: CentralLogBucketCondition
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'firehose.amazonaws.com'
            Action: 'sts:AssumeRole'
            Condition:
              StringEquals:
                sts:ExternalId: !Sub ${AWS::AccountId}
      Path: /
      Policies:
        - PolicyName: Firehose_Role_S3
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: glue:GetTableVersions
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:AbortMultipartUpload
                  - s3:GetBucketLocation
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                Resource:
                  - !Sub arn:aws:s3:::${CentralLogBucket}
                  - !Sub arn:aws:s3:::${CentralLogBucket}/*
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                  - lambda:GetFunctionConfiguration
                Resource:
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:%FIREHOSE_DEFAULT_FUNCTION%:%FIREHOSE_DEFAULT_VERSION%
                  - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:LambdaFirehoseProcessor
              - Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource: "*"
              - Effect: Allow
                Action: logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/aws-rds-logs-analytics:log-stream:*
  SecurityGroupRDS:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Port 3306 database for access
      GroupName: RDS SecurityGroup
      VpcId: !Ref ProductionVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref ProductionCIDR
      Tags:
        - Key: Name
          Value: sg-database-access
  AuroraStack:
    Type: 'AWS::CloudFormation::Stack'
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-amazon-aurora-mysql/templates/aurora_mysql.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        Subnet1ID: !Ref DBPrivateSubnetA
        Subnet2ID: !Ref DBPrivateSubnetB
        VPCID: !Ref ProductionVPC
        DBEngineMode: 'provisioned'
        DBName: !Ref DBName
        DBMasterUsername: !Ref DBUser
        DBMasterUserPassword: !Ref DBPassword
        RotateDBPassword: 'false'
        CustomDBSecurityGroup: !Ref SecurityGroupRDS
  CopyZipsTemplate:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - 'https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/copy-zips.template.yaml'
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        QSS3BucketName: !Ref 'QSS3BucketName'
        QSS3BucketRegion: !Ref 'QSS3BucketRegion'
        QSS3KeyPrefix: !Ref 'QSS3KeyPrefix'
        SourceObjects: "functions/packages/FHProcessor/lambda.zip"

Outputs:
  AuroraClusterEndpoint:
    Value: !GetAtt AuroraStack.Outputs.AuroraClusterEndpoint
  SecurityGroupRDS:
    Value: !Ref SecurityGroupRDS
  DBName:
    Value: !Ref DBName
  Help:
    Description: For assistance or questions regarding this quickstart please email
      compliance-accelerator@amazon.com
    Value: ''
